version: '3.8'

services:
  # Blockchain node
  ethereum-node:
    image: ethereum/client-go:latest
    container_name: demle-geth
    ports:
      - "8545:8545"
      - "8546:8546"
      - "30303:30303"
    volumes:
      - ethereum-data:/root/.ethereum
      - ./genesis.json:/genesis.json
    command: >
      --dev
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.api eth,net,web3,personal,miner
      --http.corsdomain "*"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.api eth,net,web3
      --allow-insecure-unlock
      --rpc.allow-unprotected-txs
    networks:
      - demle-network

  # Contract deployment
  contracts:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    container_name: demle-contracts
    depends_on:
      - ethereum-node
    volumes:
      - ./contracts:/app
      - ./artifacts:/app/artifacts
    environment:
      - ETH_RPC_URL=http://ethereum-node:8545
    networks:
      - demle-network

  # Miner instance 1
  miner-1:
    build:
      context: .
      dockerfile: Dockerfile.miner
    container_name: demle-miner-1
    depends_on:
      - contracts
    environment:
      - DEMLE_RPC_URL=http://ethereum-node:8545
      - DEMLE_MINER_ID=miner-1
      - DEMLE_THREADS=4
    volumes:
      - ./target:/app/target
    networks:
      - demle-network
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G

  # Miner instance 2
  miner-2:
    build:
      context: .
      dockerfile: Dockerfile.miner
    container_name: demle-miner-2
    depends_on:
      - contracts
    environment:
      - DEMLE_RPC_URL=http://ethereum-node:8545
      - DEMLE_MINER_ID=miner-2
      - DEMLE_THREADS=2
    volumes:
      - ./target:/app/target
    networks:
      - demle-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: demle-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - demle-network

  grafana:
    image: grafana/grafana:latest
    container_name: demle-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=demle123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - demle-network

volumes:
  ethereum-data:
  grafana-data:

networks:
  demle-network:
    driver: bridge 